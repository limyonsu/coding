.box{
    /* inline과 block의 성격을 모두 가진 속성 inline요소에 widht,heigt 값을 적용할때 활용Z */
    display:  inline-block;
    width: 120px;
    height: 120px;
    border: 1px solid rebeccapurple;
    border-radius: 8px;
    background-color: blue;
}
#first{
    background-color: gold;
    transform: rotate(0deg);
    transition: all 3s ease;
    transform-origin: right-bottom;
    transform: rotate(0deg);
    /* 여러가지 속성에 대해 개별적으로 transition을 적용할 수 있다 */
}
#first:hover{
    transform: rotate(360deg) translateX(100%);
    
    transition: all 3s ease;
}
#second{
    background-color: cornsilk;
    transform: rotate(0deg);
    transition: all 3s ease;
}
#second:hover{
    transform: scale(5);
    transition: all 15s ease;
}
/* transform은 다른 요소에 영향을 주지 않고 혼자서 변형한다 */
#third{
    background-color: firebrick;
    transform: rotate(0deg);
    transform: skew(15deg, 15deg);
    transform: skewX(45deg);
    transform: skewY(0deg);
    transition: all 3s ease;
}
#third:hover{
    transform: skew(30deg, 30deg);
    transform: skewX();
    transform: skewY(70deg);
    transition: all 5s ease;
}
#t1{
    /* translateX (x축으로 이동할 값 */
    transform: translateX(0%);
    transition: all 1s cubic-bezier(0.85, 0.01, 0.53, 2.57);
}
#t2{
    /* translateY (y축으로 이동할 값 */
    /* transform: translateY(-20px); */
    transform: translateX(0%);
}
#t3{
    /* translate (x값,y값 */
    transform: translate(0%);
    /* 주의할점: animation/transform을 과하게 많이 쓰면, 브라우저가 해야할 일이 많아져,화면이 버벅 거리는 원인이 될 수 있디 */
}
#t1:hover{
    transform: translateX(100%);
}
#t2:hover{
    transform: translateX(100%);
    transition: all 1s ease-in-out;
}
#t3:hover{
    transform: translateX(100%);
    transition: all 5s ease;
}